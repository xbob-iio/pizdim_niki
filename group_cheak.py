from telethon.sync import TelegramClient
from telethon.tl.functions.messages import GetDialogsRequest
from telethon.tl.types import InputPeerEmpty
import os

# üîê –¢–≤–æ–∏ –¥–∞–Ω–Ω—ã–µ
api_id =   # <-- API ID
api_hash = ''  # <-- API HASH
session_name = 'my_session'

client = TelegramClient(session_name, api_id, api_hash)

async def main():
    await client.start()
    print("‚úÖ –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –ø—Ä–æ—à–ª–∞")

    # –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ –¥–∏–∞–ª–æ–≥–æ–≤ (—á–∞—Ç—ã, –≥—Ä—É–ø–ø—ã –∏ —Ç.–¥.)
    dialogs = await client.get_dialogs()

    print("\nüìã –°–ø–∏—Å–æ–∫ —á–∞—Ç–æ–≤:")
    group_dialogs = [d for d in dialogs if d.is_group]

    for i, chat in enumerate(group_dialogs):
        print(f"{i + 1}. {chat.name} (ID: {chat.id})")

    # –°–ø—Ä–∞—à–∏–≤–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –≤ –∫–∞–∫—É—é –≥—Ä—É–ø–ø—É –∑–∞–π—Ç–∏
    index = int(input("\nüî¢ –í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä –≥—Ä—É–ø–ø—ã: ")) - 1
    if index < 0 or index >= len(group_dialogs):
        print("‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π –Ω–æ–º–µ—Ä.")
        return

    target_group = group_dialogs[index]

    print(f"\nüì® –°–æ–±–∏—Ä–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏—è –∏–∑: {target_group.name}")

    users = set()

    async for msg in client.iter_messages(target_group, limit=1000):
        if msg.sender_id:
            try:
                sender = await client.get_entity(msg.sender_id)
                name = f"{sender.first_name or ''} {sender.last_name or ''}".strip()
                username = f"@{sender.username}" if sender.username else f"(ID: {sender.id})"
                users.add((name, username))
            except:
                continue

    with open("users.txt", "w", encoding="utf-8") as f:
        for name, username in users:
            f.write(f"{name} | {username}\n")

    print(f"\n‚úÖ –ì–æ—Ç–æ–≤–æ! –°–æ—Ö—Ä–∞–Ω–µ–Ω–æ {len(users)} –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –≤ users.txt")

with client:
    client.loop.run_until_complete(main())

